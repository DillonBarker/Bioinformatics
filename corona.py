# import packages
from Bio.Alphabet.IUPAC import ExtendedIUPACProtein
from Bio.Seq import Seq
import os
from Bio.Alphabet import generic_dna, HasStopCodon

# set wd on laptop
os.chdir('C:/Users/barke/Documents/2020/Github-Repositories/Bioinformatics')
# set wd on pc
#os.chdir('C:/Users/barke/Documents/2020/Coding and Stats/Github-Repositories/Bioinformatics')

# load the sequence
from Bio import SeqIO

for record in SeqIO.parse("genome.fasta", "fasta"):
    genome_id = record.id
    genome_seq = record.seq

# KEY: id gives the id of the genome, whilst seq is the fill sequence

# translate the sequence
# genome_translated_seq = genome_seq.translate()
genome_translated_seq = (
    'IKGLYLPRQTNQLSISCRSVLTNFKICVAVTRLHACTHAVLITNYCRQDTSNSSIFCRLLTVSSVLQPIISTSRFRPGVTERDGEPCPWFQRENTRPTQFACFTGSRRARTWLWRLRGGGLIRGTSTSRWHLWLSRSKRRFASTTALCVHQTFGCSNCTSWSCYGAGSRTRRHSVRSWDTWCPCPSCGRNTSGLPQGSSSERRSWWPLRRRSKVILRRRAWHSLRFSRKLEHTQWCYPTHAARRGIHSLCRQLLWPWLPSVHRPSSTCWSFMHFVRTTGLYHEGCILLPTANCLVHGTFKELIADTFNIGKEIHLQWGMSKFCISLKFHNQDYSTKGKEKAWLYGNSICLSSCVTKMQPNVPFNSHEVSLWNFMADGRFCSHLRILWHEFDRRCHYLWLLTPKCCCNLLSSMSQFRSRTASCRIPIWLENHSSGWSHYCLWRLCVLLCWLPQVCLLGSTCRHRLPYRCCWRRFRRSQPSNTPKRESQHQYCWLTRDRHYFGIFFCFHKCFCGNCERFGLSIQTNCILWFSYKRKSKRCLEYWTEINTESSLCICIRGCSCCTINFLPHSNCSKFCACFTEGRYNNTRWNFTVFTETHCYDVHIFGYQSSCNGLHYRWCCSVDFAVANHLWHCLKTQTRPLAREVGRCRVSRRLGNCIYLNLCLNCRWTNCHLCKGNGECSDILACKIFGFVCLYHYWWSTSLEFRNICHALKGIVQKVCIQRRNWPTHASKSPKRNYLLRGRNTSHRSVNRGSCLENWFTTIRTTYSCSSIGWYTSLYRAYVARNQRHRKVLCPCTYDGNKQYLHTQRRCTNKGYFWHCDRSARLQECEYHFTKDSTEVLCLYSTRYRSKVRLCCGRCCHKNFATSIITYTTGHFRVEYGYILLIVWVIGFTYVLFFLPSRGRRRLRRRVAINSIVWYRLPRTFGIWCHFCCSSTRRARRRLVRSTNCWSTRRQGQSDNYYSNNCGSTSIRDGTYTSCSDYSEFWLFKTYQCIHKCRHCGRSKGKTNSGCCSQCLPTWRRCCRSLKGYQCHASILHSYWTTSGWLCFKRTQSCTLSSCCRPKCQRRHSTSECLKFSARSSTCTIIISWYFWCPYTFFKSLCRYCSHKCLLSCLKSLQTCFKLFGNEEKASTKDRDSRGSAIYNKTFSTEKTRENQSLCRSYNNSGRNVPHRKLVTLYHWQSSSRFCHSCHHHFLKERCSIYSGCCSRGCFNCCGYTYKGWWHYNASESFEKSANRQLYNHLPGSGFKWLHCRGGKDSAKVKCLLHSTIYYLEARNSWNCFLEFARNACTCRRNTQINACLCGNSHSFNYTAIGYNTRGCGLWCILLLHQNNCSVTYQHTRSKNSCYNATWLCNTWLKFGRSCSVYEISQSASYSFCFFTCCYSVWLSYFFFNTRTFYNHLTCWFLRLVLFWTIYTTRYRISERKCILHSYHIPPRWSYHLQSDTSFFERSEDYGVYNSRQHPPHASCGHVNDIWTTVWSNLFGWSCYNKTSFTRNILCFTHSTCGFVLPHNSFSGVHVSIKSHKVEIPTSWFNFYMGRQLLSCHCIVNTPTNRVEVSTCSTRCLLQSKGWSCLLCTYLSLLDSRVRCRNNELLVSTCQFRFLQKSLERGVNLWTTADNPGCRSCYVHGHTFLTIERCSDTLYVWTSYKISSTTGVTFCYDVSTTCSVTAWYIYLCVHWLPVWSLTYNFRNFVLHRRCFTYKVLRIQRSYYGCFLQRKQLHNNHKTSYLIGWCCLYRNPVGQLLERQFLFHRATNSCTKPTISKRKLRFVCMYQICFKPVNWLETCFKRASYIFPLKWCGGYLTLHTLFERSIVTTYCLACQCNSHVTKYLVYTLSLEHKTSNIKFVCTEVRGRAGNGSCLRRSKTSLRSSGKSYHTERRSVCENYRSCRRHYTTSKFKNYRRGWPHRSNGCLCRQFSYYETIISIRFENPCYSWFSCCCPLGYYSLCAFSQSCYNYHSYTVFKPCLYLYALFLYFIATIVYFYKYKFNSIYADYYSKEYCECRILSRGFILFEVTFFTDKYYNLVFTIKCLPRFFNLLNRCFRCFNVFRHAFLLYWLQRRLFELYCHYCNLLYWFYTLCLSWFRFFRHLSFFRNYTNYHFIFMGFNCFWLSCRVVFGIYSFHVFLCTWIGCNHAIVFQLFCSTFYFLAYVVNNSCTNGPDFSYGNVHLLCIILLCMEKLCACCRRLFINLYDVLQTSNKSRMYNYCWCKVLLCLCWRRLLQTTQLELCLYILCWYIYSCERLVTTVKTNKSYPVFLHRCYSEEWFHPSLLSWSKDLKTFSLSFCLRQPESHRFIAYCYSFWIKMRIICKISVCLLQSAYVSTYTVTRSGISVCWCGSCSNVCLRYVFINFRTNGKTQNTSCNCRSTCKECVLRQCLIYFYFSSSARVCFRCRNRCCMSIVTSIHRSYWRLLYAHLQSKHDTPPWCLYLCASYCAGSKKSQHCFDMERRFHVIVTTTKTNTCCKELTFVDMCNYTSCCCNNKDSTGWNCLVEAVNSYTCVPFCCCYFLFNNTCSCHVTYLFKNHRIQGYWWCHSHSIYRYLFCQTCFHMVPAWWLYQSLPIDCCSHNKRSGFCRAWFAWHDITHNWLFAFLTSFCSWHLLHTIKTYRVHLCNISLCFGCMYNFRCFWASTILLYQCTRRFCCLKFTPHTLCAHGWLYYSISHLPRFCSGNNFFVLARHLKIRSWCLCIYWMGTQLLQIFTRSFLWCRCCKFTYYVYTTNSTYWCFGHISIYSSWWYCSYRSNMPCLLFYEVKSFWIQSCSCLYFTIPYVIHCTLFNTSLLILTWCLFCYLLVLDILSYCFFFSTYSVDGYVHTFSTFLDNNCLYHLYFHKAFLLVLLPKETCSLWCFLYFRSCAVHLFVKRNVSKVACAITSYAIILSSLVQVFWSNGYNLQRSCLLSSRKGSQLQLRFCSLPTTTNLYHLSCFAEWFKNGIPIWSGLYGTSNLWYNYTRSLARSLLSKTCDLHLRHAPLRFTHSVSFLGTGWCSTQGYWTFYAKLCTAGYSQSDTVVCSHSTRTDFFSVSLLQWFTIWCLPMCYEAQFHYGFIPWFMWCWFHRLLCLFLLHAPYGITNWSSCWHRLRRLLWTFCQANSTSSWYGHNYYSCFSLVVRCCYKWRQVVSQSIYHNSLPCGYEVQLTSNTRPCHTRTSFCSNWNCRFRYVCFIKRITAKWYEWTYHIGCFIRRIYTFCCTMLRCYFPKCSEKNNQGYTPLVVTHNFDFTFSFSPEYSMVFVLFFVKCLFTFCYGYYCYVCFCNDVCQTACISLFVFVTFSCHCSLFYGLYACLGDAYYDMVGYGYFVWFAKRLCYVCISCSVTNPYDSKNCVWCESVDTYECLDTRLSLLWCFRSSHFHVGSYNLCYFLLRCSYNCHVFGQRYCFYVCVLPYFLHNWYTSVYNASLLFLRLFLYLLLWPLLFTQPLLTDSWCLLLSFYTGVIYEFTGTTPTQEHRCLQTQHIVGCWWQTLYQSSHCTVNVRCKVHISSLTLSFATTQSRIIIIVGSMCPVTQHSLSRYYSLKNGFTTFCFAFHAGCCRHKQALRNAGQQGNLTSYSLRVFPSIICSFCYCSRSLAGCCWFSCSKVEEVFECGIIPCSHATVGKDGSSYDPNVTGIGQEGKSYCYADNAFHYAKVGCTQQHYQQCKRWLCSLEHNTSYNSSQTNGCHTRLHIKYVWYNIYLCISIVGNPTGCRCRNCSTNYGQFTFSMASYCNSFKGQFCCQITEASCCTTTDVLCCRYYTNCLHQCVSLLQHNKGRVCTCTVIRFTGFEMGIPEWNWYYLYRTGTTLVCYRHTRSSEVFILYRIKQPKRYGTWFSCHSTSTSWCNRSACQFNCIIFLCFCCRCCSLQRLSSWGTTNHLCDVVYTHWYWSGNNSYTGSQYGSRILWWCIVLSVLPLPHRSSKSRILLKRVCTNTYNLCPCGFYTKHSLYRLRYVERLWLLSTPRTHASVSCTIVFKRVCGVSAARLTPCGTGTSTDVVYRAFDIYNDKVAGFAKFLKTNCCRFQEKDEDDNLIDSYFVVKRHTFSNYQHEETIYNLLKDCPAVAKHDFFKFRIDGDMVPHISRQRLTKYTMADLVYALRHFDEGNCDTLKEILVTYNCCDDDYFNKKDWYDFVENPDILRVYANLGERVRQALLKTVQFCDAMRNAGIVGVLTLDNQDLNGNWYDFGDFIQTTPGSGVPVVDSYYSLLMPILTLTRALTAESHVDTDLTKPYIKWDLLKYDFTEERLKLFDRYFKYWDQTYHPNCVNCLDDRCILHCANFNVLFSTVFPPTSFGPLVRKIFVDGVPFVVSTGYHFRELGVVHNQDVNLHSSRLSFKELLVYAADPAMHAASGNLLLDKRTTCFSVAALTNNVAFQTVKPGNFNKDFYDFAVSKGFFKEGSSVELKHFFFAQDGNAAISDYDYYRYNLPTMCDIRQLLFVVEVVDKYFDCYDGGCINANQVIVNNLDKSAGFPFNKWGKARLYYDSMSYEDQDALFAYTKRNVIPTITQMNLKYAISAKNRARTVAGVSICSTMTNRQFHQKLLKSIAATRGATVVIGTSKFYGGWHNMLKTVYSDVENPHLMGWDYPKCDRAMPNMLRIMASLVLARKHTTCCSLSHRFYRLANECAQVLSEMVMCGGSLYVKPGGTSSGDATTAYANSVFNICQAVTANVNALLSTDGNKIADKYVRNLQHRLYECLYRNRDVDTDFVNEFYAYLRKHFSMMILSDDAVVCFNSTYASQGLVASIKNFKSVLYYQNNVFMSEAKCWTETDLTKGPHEFCSQHTMLVKQGDDYVYLPYPDPSRILGAGCFVDDIVKTDGTLMIERFVSLAIDAYPLTKHPNQEYADVFHLYLQYIRKLHDELTGHMLDMYSVMLTNDNTSRYWEPEFYEAMYTPHTVLQAVGACVLCNSQTSLRCGACIRRPFLCCKCCYDHVISTSHKLVLSVNPYVCNAPGCDVTDVTQLYLGGMSYYCKSHKPPISFPLCANGQVFGLYKNTCVGSDNVTDFNAIATCDWTNAGDYILANTCTERLKLFAAETLKATEETFKLSYGIATVREVLSDRELHLSWEVGKPRPPLNRNYVFTGYRVTKNSKVQIGEYTFEKGDYGDAVVYRGTTTYKLNVGDYFVLTSHTVMPLSAPTLVPQEHYVRITGLYPTLNISDEFSSNVANYQKVGMQKYSTLQGPPGTGKSHFAIGLALYYPSARIVYTACSHAAVDALCEKALKYLPIDKCSRIIPARARVECFDKFKVNSTLEQYVFCTVNALPETTADIVVFDEISMATNYDLSVVNARLRAKHYVYIGDPAQLPAPRTLLTKGTLEPEYFNSVCRLMKTIGPDMFLGTCRRCPAEIVDTVSALVYDNKLKAHKDKSAQCFKMFYKGVITHDVSSAINRPQIGVVREFLTRNPAWRKAVFISPYNSQNAVASKILGLPTQTVDSSQGSEYDYVIFTQTTETAHSCNVNRFNVAITRAKVGILCIMSDRDLYDKLQFTSLEIPRRNVATLQAENVTGLFKDCSKVITGLHPTQAPTHLSVDTKFKTEGLCVDIPGIPKDMTYRRLISMMGFKMNYQVNGYPNMFITREEAIRHVRAWIGFDVEGCHATREAVGTNLPLQLGFSTGVNLVAVPTGYVDTPNNTDFSRVSAKPPPGDQFKHLIPLMYKGLPWNVVRIKIVQMLSDTLKNLSDRVVFVLWAHGFELTSMKYFVKIGPERTCCLCDRRATCFSTASDTYACWHHSIGFDYVYNPFMIDVQQWGFTGNLQSNHDLYCQVHGNAHVASCDAIMTRCLAVHECFVKRVDWTIEYPIIGDELKINAACRKVQHMVVKAALLADKFPVLHDIGNPKAIKCVPQADVEWKFYDAQPCSDKAYKIEELFYSYATHSDKFTDGVCLFWNCNVDRYPANSIVCRFDTRVLSNLNLPGCDGGSLYVNKHAFHTPAFDKSAFVNLKQLPFFYYSDSPCESHGKQVVSDIDYVPLKSATCITRCNLGGAVCRHHANEYRLYLDAYNMMISAGFSLWVYKQFDTYNLWNTFTRLQSLENVAFNVVNKGHFDGQQGEVPVSIINNTVYTKVDGVDVELFENKTTLPVNVAFELWAKRNIKPVPEVKILNNLGVDIAANTVIWDYKRDAPAHISTIGVCSMTDIAKKPTETICAPLTVFFDGRVDGQVDLFRNARNGVLITEGSVKGLQPSVGPKQASLNGVTLIGEAVKTQFNYYKKVDGVVQQLPETYFTQSRNLQEFKPRSQMEIDFLELAMDEFIERYKLEGYAFEHIVYGDFSHSQLGGLHLLIGLAKRFKESPFELEDFIPMDSTVKNYFITDAQTGSSKCVCSVIDLLLDDFVEIIKSQDLSVVSKVVKVTIDYTEISFMLWCKDGHVETFYPKLQSSQAWQPGVAMPNLYKMQRMLLEKCDLQNYGDSATLPKGIMMNVAKYTQLCQYLNTLTLAVPYNMRVIHFGAGSDKGVAPGTAVLRQWLPTGTLLVDSDLNDFVSDADSTLIGDCATVHTANKWDLIISDMYDPKTKNVTKENDSKEGFFTYICGFIQQKLALGGSVAIKITEHSWNADLYKLMGHFAWWTAFVTNVNASSSEAFLIGCNYLGKPREQIDGYVMHANYIFWRNTNPIQLSSYSLFDMSKFPLKLRGTAVMSLKEGQINDMILSLLSKGRLIIRENNRVVISSDVLVNNTNNVCFSCFIATSLSVCSYNQNSITPCIHFFHTWCLLPQSFQILSFTFNSGLVLTFLFQCYLVPCYTCLWDQWYEVPCPTIWCLFCFHEVHNKRLDFWYYFRFEDPVPTYCRYCCYSLISILSIFGCLLPQKQQKLDGKVQSLFCELHFICLSAFSYGPRKTGFQKSGICVEYWLFNIFAHAYFSASPSGFFGFRTIGRFANRYHHVSNFTCFTKLFDSWFFFRLDSWCCSLLCGLSSTDFSIKIKWNHYRCCRLCTPSLRNKVYVEILHCRKRNLSNFLSPTNRIYCISYYKLVPFWSFRHQICICLCLEQEENQQLCCLFCPIFRIIFHFVLWSVSYIKSLLYCLCRFICNRSQTNRSRANWKDCLLITRFYRLRYSLEFQSFGWWLLPVIVEVSQTFERYFNNLSGRHTLWCRFLLLSFTIIWFPTHWCWLPTIQSSSTFFTSTCTSNCLWTKVYFGKQMCQFQLQWFNRHRCSYVQKVSAFPTIWQRHCHYCCPSTDTDSHYTMFFWWCQCYNTRNKYFPGCCSLSGCLHRSPCCYSCRSTYSYLACLFYRFCFSNTCRLFNRGTCQQLIVHTHWCRYMRLSDSDFSSAGTCSSIHHCLHYVTWCRKFSCLLLYCHTHKFYYCYHRNSTSVYDQDISRLYNVHLWFNMQQSFVAIWQFLYTIKPCFNWNSCTRQKHPRSFCTSQTNLQNTTNRFWWFFFTNITRSIKTKQEVIYRSTFQQSDTCRCWLHQTIWLPWYCCRPHLCTKVRPYCFATFAHRNDCSIHFCTVSGYNHFWLDLWCRCCITNTICYANGLVWYWSYTECSLEPKIDCQPICYWQNSRLTFFHSKCTWKTSRCGQPKCTSFKHACTTLQFWCNFKCFKYPFTSQSGSANVDHRQTSKFADICDSTINSCRNQSFCSCCYNVRVCTWTIKKSFLWKGLSSYVLPSVSTSWCSLLACDLCPCTRKELHNCSCHLSWKSTLSSRCLCFKWHTLVCNTKEFLTTNHYYRQHICVWLCCNRNCQQHSLSFATIRLIQGGVRIFESYITRCFRHLWHCFSCKHSKRNPPQGCQEFKISHRSPRTWKVAVYKMAMVHLARFYSWLDCHSNGDNYALLYDQLLLSQGLLFLWILLQIRRLASAQRSQITLHINELMDLFMRIFTIGTVTLKQGEIKDATPSDFVRATATIPIQASLPFGWLIVGVALLAVFQSASKIITLKKRWQLALSKGVHFVCNLLLLFVTVYSHLLLVAAGLEAPFLYLYALVYFLQSINFVRIIMRLWLCWKCRSKNPLLYDANYFLCWHTNCYDYCIPYNSVTSSIVITSGDGTTSPISEHDYQIGGYTEKWESGVKDCVVLHSYFTSDYYQLYSTQLSTDTGVEHVTFFIYNKIVDEPEEHVQIHTIDGSSGVVNPVMEPIYDEPTTTTSVPLAQADEYELMYSFVSEETGTLIVNSVLLFLAFVVFLLVTLAILTALRLCAYCCNIVNVSLVKPSFYVYSRVKNLNSSRVPDLLVTNILYFFCLELFPWQIPTVLLPLKSLKSSLNNGTVSYSLHGFVFYNLPMPTGIGFCILSFSSGCYGQLLVLCLLLFTEIGSPVELLSQWLVLACGSATSLLLSDCLRVRVPCGHSIQKLTFFSTCHSMALFPDRFKVNSSELSFVDIFVLLDTIDAVTSRTCLKKSLLLHHERFLITNWELRSVQVTQVLLHTVATGLATINTQTIPVAVTILLCLYSKQQMFHLVDFQVTIAEILLIIMRTFKVSIWNLDYIINLIIKNLSKSLTENKYSQLDEEQPMEIDTNMKIILFLALITLATCELYHYQECVRGTTVLLKEPCSSGTYEGNSPFHPLADNKFALTCFSTQFAFACPDGVKHVYQLRARSVSPKLFIRQEEVQELYSPIFLIVAAIVFITLCFTLKRKTELNFHLTSICAFPFCYSLFLCLLSFGSHLNCKIIMKLVTPKRTNFLFSESSQLLHFTKNVVYSHVLNINHMLMTRVLFTSILNGILEELENQHLLNCAWMRLVLNHPFSTSISVIIQFPVYLLQLIARNLNWVVLCVVRSMKTFSIMTFVLFISSKRTNNVWTPKSAKCTPHYVWWTLRFNWQPEWRTQWGAIKTTSAPRFTQYCVLVHRSHSTWQGRPIPSRTRRSNHQQSRPNWLLPKSYQTNSWWRNERSQSKMVFLLPRNWARSWTSLWCQRRHHMGCNGSLEYTKRSHWHPQSCQCCNRATTSSRNNIAKRLLRRREQRRQSSLFSFLITSQQFKKFNSRQQGNFSCNGWQWRCCSCFAAAQIEPAEQNVWRPTTTRPNCHEICCGFEASAKTYCHSIQCNTSFRQTWSRTNPRKFWGPGTNQTRNLQTLAANCTICPQRFSVLRNVAHWHGSHTFGNVVDLHRCHQIGQRSKFQRSSHFAEAYRIQNIPTNRAKGQKEEGNSSLTAETEETANCDSSSCCRFGFLQTIATIHEQCLNSGLNSCRPHKADGLYKRFRFSVYDISTLVQNEFSLHSTSRCSLSHIAIFNQCVTLGRTKSHHIFTEATRSTIECTVNNARESCLYGRALMCKINFSSAIPMFLLRRMTKKKKKKKKKKK')

# load in the spike protein translated sequence from the .fasta file in the directory
for record in SeqIO.parse("spike.fasta", "fasta"):
    spike_id = record.id
    spike_translated_seq = record.seq

# print sequences
# print(spike_translated_seq)
# print(genome_translated_seq)

# Blast # this was not neccessary, but im leaving it here incase I need it again
# blast
# from Bio.Blast.Applications import NcbiblastxCommandline

# blastx_cline = NcbiblastxCommandline(query="spike.fasta", db="genome.fasta", evalue=0.001, outfmt=5, out="spike.xml")
# blastx_cline = NcbiblastxCommandline(cmd='C:/Program Files/NCBI/blast-2.10.0+/bin/blastx.exe', out='spike.xml', outfmt=5, query='spike.fasta', db='genome.fasta', evalue=0.001)
# print(blastx_cline)
# stdout, stderr = blastx_cline()

# Alignment
#from Bio import Align
#aligner = Align.PairwiseAligner()
#alignments = aligner.align("spike_translated_sec", "genome_translated_seq")
#for alignment in sorted(alignments):
#    print("Score = %/1f:" % alignment.score)
#    print(alignment)

# now time for some visualisation
# I have a spike protein from SARS-CoV and SARS-CoV-2, this is a surface glycoprotein which is
# responsible for the virus' entry into the cell
for record in SeqIO.parse("spike.fasta", "fasta"):
    spike_id = record.id
    spike_translated_seq = record.seq
for record in SeqIO.parse("spike2.fasta", "fasta"):
    spike2_id = record.id
    spike2_translated_seq = record.seq

# pdb
from Bio.PDB import *

pdbl = PDBList()
pdbl.retrieve_pdb_file('spikeprotein')



